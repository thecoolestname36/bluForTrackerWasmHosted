@page "/{clientVersion?}"
@namespace BluForTracker.Server.Pages
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Configuration
@using BluForTracker.Client
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IConfiguration Configuration
@{
    Layout = null;
    var appVersion = typeof(App).Assembly.GetName().Version?.ToString() ?? "unk";

    if (Request.RouteValues.TryGetValue("clientVersion", out var clientVersion) && clientVersion is string && ((string)clientVersion).StartsWith(appVersion))
    {
        // Client version is up to date, no work needs to be done
    }
    else if (Request.RouteValues.TryGetValue("path", out var path) && path is string && ((string)path).StartsWith(appVersion))
    {
        // Client has an existing path and version is up to date, no work needs to be done
    }
    else
    {
        // Client needs a verison update!
        Response.Headers.TryAdd("Clear-Site-Data", "cache");
        Response.Redirect($"/{appVersion}/");
        return;
    }

    var googleMapsApiKey = Configuration.GetValue<string>("GoogleMapsApiKey");
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta http-equiv="Cache-control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>BluForTracker</title>
    <base href="/" />
    <link href="css/bootstrap.min.css?v=4.1.3" rel="stylesheet" />
    <link href="css/app.css?v=@appVersion" rel="stylesheet" />
    <!-- Scoped CSS files -->
    <link href="BluForTracker.Client.styles.css?v=@appVersion" rel="stylesheet">
    <link href="manifest.json?v=@appVersion" rel="manifest" />
</head>

<body>
<div id="app">
    <div class="lds-ripple-container"><div class="lds-ripple"><div></div><div></div></div></div>
</div>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.webassembly.js?v=@appVersion"></script>

    <script>
        window.mapModule = {
            map: null,
            positionWatch: null,
            loading: true,
            mapsCallback: function () {
                window.mapModule.loading = false;
            }
        };
    </script>
    <component type="typeof(HeadOutlet)" render-mode="WebAssembly" />
    <script>navigator.serviceWorker.register('service-worker.js?v=@appVersion', { updateViaCache: 'none' });</script>
</body>

</html>